FROM nvidia/cuda:12.1.0-runtime-ubuntu20.04
# docker build -t foundationmodels/vllm:cuda12 -f Dockerfile.vllm .

ENV LANG en_US.UTF-8
ENV DEBIAN_FRONTEND=noninteractive
ENV NVIDIA_DRIVER_CAPABILITIES video,compute,utility

RUN apt-get update && apt-get install --no-install-recommends -y software-properties-common \
    build-essential curl nano vim git sudo ssh lshw wget netcat net-tools iputils-ping \
	zsh git-lfs && \
    apt update && add-apt-repository -y ppa:deadsnakes/ppa && \
    apt install --no-install-recommends -y python3.9 python3-distutils && \
    apt clean && rm -rf /var/lib/apt/lists/*

RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 2 && \
    update-alternatives --install /usr/bin/python python /usr/bin/python3 3 

RUN curl https://bootstrap.pypa.io/get-pip.py | python3


ARG USER_ID=1000
ARG USERS_GID=100
ARG USER=agent

RUN useradd -m ${USER} --uid=${USER_ID} &&  \
	echo "${USER} ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers && \
	adduser ${USER} users && adduser ${USER} sudo && \
	usermod --shell /usr/bin/bash ${USER} 

RUN sh -c "$(wget -O- https://github.com/deluan/zsh-in-docker/releases/download/v1.1.5/zsh-in-docker.sh)"

ENV NVM_DIR /usr/local/bin/nvm

# Creating NVM missing directory
RUN mkdir ${NVM_DIR}

USER ${USER}
WORKDIR /home/${USER}


# Installing nvm
RUN sudo chmod 777 ${NVM_DIR}
RUN sudo curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.2/install.sh | bash

# Installing node/npm
RUN exec bash \
	&& nvm install $NODE_VERSION \
	&& nvm alias default $NODE_VERSION \
	&& nvm use default

# Setting up environmental vars for node/npm
ENV NODE_PATH $NVM_DIR/v$NODE_VERSION/lib/node_modules
ENV PATH $NVM_DIR/v$NODE_VERSION/bin:$PATH

RUN pip install opencv-python
RUN sudo apt-get update && sudo apt-get install ffmpeg libsm6 -y
RUN pip install ultralytics slack_sdk 
RUN pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118


ENV NODE_VERSION 20.0.0

RUN exec bash \
	&& sudo nvm install $NODE_VERSION \
	&& sudo nvm alias default $NODE_VERSION \
	&& sudo nvm use default

RUN sudo apt install -y npm

# # RUN pip3 install --upgrade pip && pip3 install Django django-extensions django-admin-tools django-taggit \
# #     django-taggit-autosuggest django-taggit-serializer djangorestframework django-utils-six \
# #     django-googledrive-storage djangocms_text_ckeditor django-ckeditor django-filter django-advanced-filters \
# #     django-filer django-filebrowser-no-grappelli django-ckeditor-filebrowser-filer django-sekizai django-crispy-forms \
# #     django-imagekit django-environ django_resized django-jet-reboot \
# # 	psycopg PyPDF2 jsonpatch numexpr Hypercorn spacy openai langchain \
# # 	gunicorn sqlalchemy pandas pyarrow fastparquet redis celery shortuuid \
# # 	langsmith opensearch-py pymilvus nltk llama-index tqdm autopep8 fastapi fastapi_utils uvicorn flask \
# # 	pandarallel 

# # RUN pip3 install -U pydantic
# # RUN pip3 install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu

# # RUN sh -c "$(wget -O- https://github.com/deluan/zsh-in-docker/releases/download/v1.1.5/zsh-in-docker.sh)"

# # RUN sudo sudo apt install -y build-essential libgeos-c1v5 libgeos-dev
# # RUN pip install -U django django-extensions jet_bridge GeoAlchemy2==0.6.2 Shapely==1.6.4 
# # RUN pip install flower temporalio environ duckdb copilot PyQt5 PyQtWebEngine qtpy cutelog python-multipart

# RUN sudo apt install -y rsync
